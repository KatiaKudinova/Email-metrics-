WITH account_metric as (
SELECT
date(s.Date) as date,
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed,
count (distinct(a.id)) as account_cnt,
0 as sent_msg,
0 as open_msg,
0 as visit_msg
FROM data-analytics-mate.DA.session_params as sp
join `DA.session` s
on sp.ga_session_id = s.ga_session_id
left join `DA.account_session` ass
on s.ga_session_id = ass.ga_session_id
join data-analytics-mate.DA.account as a
on ass.account_id = a.id
group by
date,
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed
),
message_metric as (
select
date_add(s.Date, interval ac.sent_date day) as date,
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed,
 0 as account_cnt,
count (distinct ac.id_message) as sent_msg,
count (distinct eo.id_message) as open_msg,
count (distinct ev.id_message) as visit_msg
FROM data-analytics-mate.DA.session_params as sp
join `DA.session` s
on sp.ga_session_id = s.ga_session_id
left join `DA.account_session` ass
on s.ga_session_id = ass.ga_session_id
join data-analytics-mate.DA.account as a
on ass.account_id = a.id
join data-analytics-mate.DA.email_sent as ac
on a.id = ac.id_account
left join `DA.email_open` eo
on ac.id_message = eo.id_message
left join data-analytics-mate.DA.email_visit as ev
on ac.id_message = ev.id_message
GROUP by
date_add(s.Date, interval ac.sent_date day),
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed
),
combi_m as (
select * from account_metric
union all
select * from message_metric
),
aggrete_all as (
select
date,
country,
send_interval,
is_verified,
is_unsubscribed,
sum(account_cnt) as account_cnt,
sum(sent_msg) as sent_msg,
sum(open_msg) as open_msg,
sum(visit_msg) as visit_msg
from combi_m
GROUP BY date,
country,
send_interval,
is_verified,
is_unsubscribed
),
total_agg as (
select *,
sum(account_cnt) over (partition by country) as total_country_account_cn,
sum(sent_msg) over (partition by country) as total_country_sent_cnt
from aggrete_all
),
final as (
select *,
dense_rank () over (partition by date order by total_country_account_cn DESC) as rank_total_country_account_cnt,
dense_rank () over (partition by date order by total_country_sent_cnt DESC) as rank_total_country_sent_cnt
from total_agg)
select
date,
country,
send_interval,
is_verified,
is_unsubscribed,
sum(account_cnt) as account_cnt,
sum(sent_msg) as sent_msg,
sum(open_msg) as open_msg,
sum(visit_msg) as visit_msg,
max(total_country_account_cn) as total_country_account_cn,
max(total_country_sent_cnt) as total_country_sent_cnt,
max(rank_total_country_account_cnt) as rank_total_country_account_cnt,
max(rank_total_country_sent_cnt) as rank_total_country_sent_cnt
from final
WHERE rank_total_country_account_cnt <= 10 or  rank_total_country_sent_cnt <=10
GROUP BY date,
country,
send_interval,
is_verified,
is_unsubscribed
ORDER BY date, country;
